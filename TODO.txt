1. Implement memory manager
	Implement basic memory allocation and de-allocation routines
	for the kernel to use which should be generic enough for
	extension into user-space in the future. Requires a way to
	describe available memory and manage it using an efficient
	algorithm. The framework should be easily extensible by adding
	new memory management algorithms without the need to change
	any of the API's.

2. Write ISR's in assembly
	Right now, all ISR's are in C which is bad. ISR's should be
	small pieces of assembly code calling a C function to do the
	major work of the ISR.

3. Write error handling infrastructure
	Should be able to handle all error scenarios where the error
	or fault that occured should be reciprocated to the appropriate
	party in a descriptive and easily understandable fashion.
	The framework should be esaily extensible by adding new
	algorithms and error handling mechanisms.

3. Write boot code
	Need code to load and run the operating system if we have to
	port it to some hardware.
